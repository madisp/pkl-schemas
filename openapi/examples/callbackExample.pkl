amends "../OpenApi.pkl"

import "@openapi/Schema.pkl"

// pkl equivalent of
// https://github.com/OAI/OpenAPI-Specification/blob/main/examples/v3.0/callback-example.yaml
// render back to yaml with:
// pkl eval -f yaml examples/callbackExample.pkl

openapi = "3.0.0"

info {
  title = "Callback Example"
  version = "1.0.0"
}

paths {
  ["/streams"] {
    post {
      description = "subscribes a client to receive out-of-band data"
      parameters {
        new Parameter {
          name = "callbackUrl"
          `in` = "query"
          required = true
          description = """
            the location where data will be sent.  Must be network accessible
            by the source server
            """
          schema = new Schema {
            type = "string"
            format = "uri"
            example = "https://tonys-server.com"
          }
        }
      }
      responses {
        ["201"] = new Response {
          description = "subscription successfully created"
          content {
            ["application/json"] {
              schema = new Schema {
                // TODO(madis) pkl pantry's openapi requires this, OpenAPI example doesn't have it though
                //             does it default to "object"?
                type = "object"
                description = "subscription information"
                required {
                  "subscriptionId"
                }
                properties {
                  ["subscriptionId"] = new Schema.PropertySchema {
                    description = "this unique identifier allows management of the subscription"
                    type = "string"
                    example = "2531329f-fb09-4ef7-887e-84e648214436"
                  }
                }
              }
            }
          }
        }
      }
      callbacks {
        // the name `onData` is a convenience locator
        ["onData"] = new Callback {
          ["{$request.query.callbackUrl}/data"] {
            post {
              requestBody = new RequestBody {
                description = "subscription payload"
                content {
                  ["application/json"] {
                    schema = new Schema {
                      type = "object"
                      properties {
                        ["timestamp"] = new Schema.PropertySchema {
                          type = "string"
                          format = "date-time"
                        }
                        ["userData"] = new Schema.PropertySchema {
                          type = "string"
                        }
                      }
                    }
                  }
                }
              }
              responses {
                ["202"] = new Response {
                  description = """
                    Your server implementation should return this HTTP status code
                    if the data was received successfully
                    """
                }
                ["204"] = new Response {
                  description = """
                    Your server should return this HTTP status code if no longer interested
                    in further updates
                    """
                }
              }
            }
          }
        }
      }
    }
  }
}